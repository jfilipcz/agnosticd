---
# Implement your Workload deployment tasks here
- name: Ensure directory exists
  file:
    path: "/tmp/{{ guid }}"
    state: directory

- name: Install helm
  include_tasks: install-helm.yaml

- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

- name: Add cert-manager chart repo
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: "https://charts.jetstack.io"

- name: Install cert-manager chart
  kubernetes.core.helm:
    name: cert-manager
    chart_ref: jetstack/cert-manager
    chart_version: "{{ cert_manager_helm_ver }}"
    release_namespace: "{{ cert_manager_ns}}"
    create_namespace: true
    skip_crds: false
    wait: true
    update_repo_cache: true
    values:
      extraArgs:
        - "--dns01-recursive-nameservers=8.8.8.8:53,1.1.1.1:53"
        - "--dns01-recursive-nameservers-only"
      installCRDs: true

- name: Add redhat-cop chart repo
  kubernetes.core.helm_repository:
    name: redhat-cop
    repo_url: "https://redhat-cop.github.io/helm-charts"

- name: Wait until cert-manager is up
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ cert_manager_ns }}"
  register: pod_list
  until: pod_list|json_query('resources[*].status.phase')|unique == ["Running"]
  retries: 20
  delay: 10

- name: Install cert-manager-configs chart
  kubernetes.core.helm:
    name: cert-manager-configs
    chart_ref: redhat-cop/cert-manager-configs
    chart_version: "{{ cert_configs_helm_ver }}"
    release_namespace: "{{ cert_configs_ns }}"
    create_namespace: true
    skip_crds: no
    wait: true
    update_repo_cache: true
    values:
      namespace: "{{ cert_configs_ns }}"
      issuer: "{{ cert_configs_acme_cluster_issuer }}"
      aws: "{{ cert_configs_route53 }}"
      certificates: "{{ cert_configs_cert_manager_certificates }}"
      cluster: "{{ cert_configs_cluster }}"

# Leave this as the last task in the playbook.
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent | bool
